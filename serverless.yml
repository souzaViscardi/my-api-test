

service: my-api
app: my-aws-node-express-api-app
org: kevinguitars

frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:PutObject"
        - "s3:GetObject"
      Resource:
        - "arn:aws:s3:::"


# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  hello:
    handler: handler.hello

  insertFuncionario:
    handler: src/controllers/Funcionario.insert
    events:
      - http:
          path: funcionarios
          method: post

  listAllFuncionario:
    handler: src/controllers/Funcionario.listAll
    events:
      - http:
          path: funcionarios
          method: get

  removeFuncionario:
    handler: src/controllers/Funcionario.remove
    events:
      - http:
          path: funcionarios/{id}
          method: delete

  updateFuncionario:
    handler: src/controllers/Funcionario.update
    events:
      - http:
          path: funcionarios
          method: put

